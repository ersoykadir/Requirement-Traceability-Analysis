1.1.1.1.1. Guests shall enter an unused username, an unregistered email address, and a strong password to signup.


    TOKEN: Guests
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'enter'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'enter'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: enter
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'enter'
    token.dep_ = 'ROOT'
    root


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'username'
    token.dep_ = 'det'
    determiner


    TOKEN: unused
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'username'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: username
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'enter'
    token.dep_ = 'dobj'
    direct object


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'username'
    token.dep_ = 'punct'
    punctuation


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'address'
    token.dep_ = 'det'
    determiner


    TOKEN: unregistered
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'address'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: email
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'address'
    token.dep_ = 'compound'
    compound


    TOKEN: address
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'username'
    token.dep_ = 'appos'
    appositional modifier


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'address'
    token.dep_ = 'punct'
    punctuation


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'address'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'password'
    token.dep_ = 'det'
    determiner


    TOKEN: strong
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'password'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: password
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'address'
    token.dep_ = 'conj'
    conjunct


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'signup'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: signup
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'password'
    token.dep_ = 'relcl'
    relative clause modifier

1.1.1.1.2. Guests shall agree to the privacy policy and terms&conditions to signup.


    TOKEN: Guests
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'agree'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'agree'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: agree
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'agree'
    token.dep_ = 'ROOT'
    root


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'agree'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'policy'
    token.dep_ = 'det'
    determiner


    TOKEN: privacy
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'policy'
    token.dep_ = 'compound'
    compound


    TOKEN: policy
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'policy'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: terms&conditions
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'policy'
    token.dep_ = 'conj'
    conjunct


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'signup'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: signup
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'agree'
    token.dep_ = 'xcomp'
    open clausal complement

1.1.1.2.1. Users shall provide their usernames and passwords to log in.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'provide'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'provide'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: provide
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'provide'
    token.dep_ = 'ROOT'
    root


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'usernames'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: usernames
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'provide'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'usernames'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: passwords
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'usernames'
    token.dep_ = 'conj'
    conjunct


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'log'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: log
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'provide'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: in
    =====
    token.tag_ = 'RP'
    adverb, particle
    token.head.text = 'log'
    token.dep_ = 'prt'
    particle

1.1.1.3.1. Users shall enter the received verification codes (via their registered email addresses) to complete the email verification process.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'enter'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'enter'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: enter
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'enter'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'codes'
    token.dep_ = 'det'
    determiner


    TOKEN: received
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'codes'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: verification
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'codes'
    token.dep_ = 'compound'
    compound


    TOKEN: codes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'enter'
    token.dep_ = 'dobj'
    direct object

1.1.1.4.1. Users shall first enter the email addresses they signed up with and then the verification code they received.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'enter'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'enter'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: first
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'enter'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: enter
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'enter'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'addresses'
    token.dep_ = 'det'
    determiner


    TOKEN: email
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'addresses'
    token.dep_ = 'compound'
    compound


    TOKEN: addresses
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'enter'
    token.dep_ = 'dobj'
    direct object


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'signed'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: signed
    =====
    token.tag_ = 'VBD'
    verb, past tense
    token.head.text = 'addresses'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: up
    =====
    token.tag_ = 'RP'
    adverb, particle
    token.head.text = 'signed'
    token.dep_ = 'prt'
    particle


    TOKEN: with
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'signed'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'enter'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: then
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'code'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'code'
    token.dep_ = 'det'
    determiner


    TOKEN: verification
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'code'
    token.dep_ = 'compound'
    compound


    TOKEN: code
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'enter'
    token.dep_ = 'conj'
    conjunct


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'received'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: received
    =====
    token.tag_ = 'VBD'
    verb, past tense
    token.head.text = 'code'
    token.dep_ = 'relcl'
    relative clause modifier

1.1.1.4.2. Users shall be authenticated after verification and be logged in.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'authenticated'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'authenticated'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'authenticated'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: authenticated
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'authenticated'
    token.dep_ = 'ROOT'
    root


    TOKEN: after
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'authenticated'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: verification
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'after'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'authenticated'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'logged'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: logged
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'authenticated'
    token.dep_ = 'conj'
    conjunct


    TOKEN: in
    =====
    token.tag_ = 'RP'
    adverb, particle
    token.head.text = 'logged'
    token.dep_ = 'prep'
    prepositional modifier

1.1.1.5.1. Users shall be able to log out.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'log'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: log
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: out
    =====
    token.tag_ = 'RP'
    adverb, particle
    token.head.text = 'log'
    token.dep_ = 'prt'
    particle

1.1.1.6.1. Users shall be able to change their passwords from the settings screen.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'change'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: change
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'passwords'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: passwords
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'change'
    token.dep_ = 'dobj'
    direct object


    TOKEN: from
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'change'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'screen'
    token.dep_ = 'det'
    determiner


    TOKEN: settings
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'screen'
    token.dep_ = 'compound'
    compound


    TOKEN: screen
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'from'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.1. Users shall have a profile page.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'page'
    token.dep_ = 'det'
    determiner


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object

1.1.2.2. Users shall be able to edit their profile page.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'edit'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: edit
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'edit'
    token.dep_ = 'dobj'
    direct object

1.1.2.3. Users shall be able to display their full name on their profile pages.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'display'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: display
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'name'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: full
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'name'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: name
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'display'
    token.dep_ = 'dobj'
    direct object


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'display'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'pages'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'pages'
    token.dep_ = 'compound'
    compound


    TOKEN: pages
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.4. Users shall have a profile picture.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'picture'
    token.dep_ = 'det'
    determiner


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'picture'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: picture
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object

1.1.2.5. Users shall be able to change their profile picture.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'change'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: change
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'picture'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'picture'
    token.dep_ = 'compound'
    compound


    TOKEN: picture
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'change'
    token.dep_ = 'dobj'
    direct object

1.1.2.6. Users shall have a bio in their profile pages.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'bio'
    token.dep_ = 'det'
    determiner


    TOKEN: bio
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'have'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'pages'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'pages'
    token.dep_ = 'compound'
    compound


    TOKEN: pages
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.7. Users shall have a "My Events" section on their profile pages.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'section'
    token.dep_ = 'det'
    determiner


    TOKEN: "
    =====
    token.tag_ = '``'
    opening quotation mark
    token.head.text = 'section'
    token.dep_ = 'punct'
    punctuation


    TOKEN: My
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'Events'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: Events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'section'
    token.dep_ = 'nmod'
    modifier of nominal


    TOKEN: "
    =====
    token.tag_ = "''"
    closing quotation mark
    token.head.text = 'section'
    token.dep_ = 'punct'
    punctuation


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'section'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'pages'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'pages'
    token.dep_ = 'compound'
    compound


    TOKEN: pages
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.8. Users shall be able to determine their profile page visibility as public or private.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'determine'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: determine
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'visibility'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'visibility'
    token.dep_ = 'compound'
    compound


    TOKEN: visibility
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'determine'
    token.dep_ = 'dobj'
    direct object


    TOKEN: as
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'visibility'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: public
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'as'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'public'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: private
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'public'
    token.dep_ = 'conj'
    conjunct

1.1.2.9. Followers, Follows, My Events, Interest Areas, Achievements, Progress, Notes, and Annotations sections shall be hidden on private profiles.


    TOKEN: Followers
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'hidden'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'Followers'
    token.dep_ = 'punct'
    punctuation


    TOKEN: Follows
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Followers'
    token.dep_ = 'appos'
    appositional modifier


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'Follows'
    token.dep_ = 'punct'
    punctuation


    TOKEN: My
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'Events'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: Events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'Follows'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'Events'
    token.dep_ = 'punct'
    punctuation


    TOKEN: Interest
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Areas'
    token.dep_ = 'compound'
    compound


    TOKEN: Areas
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Events'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'Areas'
    token.dep_ = 'punct'
    punctuation


    TOKEN: Achievements
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Areas'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'Achievements'
    token.dep_ = 'punct'
    punctuation


    TOKEN: Progress
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Achievements'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'Progress'
    token.dep_ = 'punct'
    punctuation


    TOKEN: Notes
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Progress'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'Notes'
    token.dep_ = 'punct'
    punctuation


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'Notes'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: Annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'sections'
    token.dep_ = 'compound'
    compound


    TOKEN: sections
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'Notes'
    token.dep_ = 'conj'
    conjunct


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'hidden'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'hidden'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: hidden
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'hidden'
    token.dep_ = 'ROOT'
    root


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'hidden'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: private
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'profiles'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: profiles
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.10.1 Users shall identify their interest areas.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'identify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'identify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: identify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'identify'
    token.dep_ = 'ROOT'
    root


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'areas'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: interest
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'areas'
    token.dep_ = 'compound'
    compound


    TOKEN: areas
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'identify'
    token.dep_ = 'dobj'
    direct object

1.1.2.10.2 Users shall display their interest areas in their profile pages.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'display'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'display'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: display
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'display'
    token.dep_ = 'ROOT'
    root


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'areas'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: interest
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'areas'
    token.dep_ = 'compound'
    compound


    TOKEN: areas
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'display'
    token.dep_ = 'dobj'
    direct object


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'display'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'pages'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'pages'
    token.dep_ = 'compound'
    compound


    TOKEN: pages
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.11.1. Users shall be able to earn achievements via the completion of a specific amount of Learning Spaces with related topics.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'earn'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: earn
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: achievements
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'earn'
    token.dep_ = 'dobj'
    direct object


    TOKEN: via
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'earn'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'completion'
    token.dep_ = 'det'
    determiner


    TOKEN: completion
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'via'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'completion'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'amount'
    token.dep_ = 'det'
    determiner


    TOKEN: specific
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'amount'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: amount
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'amount'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: Learning
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Spaces'
    token.dep_ = 'compound'
    compound


    TOKEN: Spaces
    =====
    token.tag_ = 'NNPS'
    noun, proper plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: with
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'amount'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: related
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'topics'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: topics
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'with'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.11.2. Users shall view their achievements from the achievements section of their profile pages.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'view'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'view'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: view
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'view'
    token.dep_ = 'ROOT'
    root


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'achievements'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: achievements
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'view'
    token.dep_ = 'dobj'
    direct object


    TOKEN: from
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'view'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'section'
    token.dep_ = 'det'
    determiner


    TOKEN: achievements
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'section'
    token.dep_ = 'compound'
    compound


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'from'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'section'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'pages'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'pages'
    token.dep_ = 'compound'
    compound


    TOKEN: pages
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.12.1. Users shall be able to track their progress.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'track'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: track
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'progress'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: progress
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'track'
    token.dep_ = 'dobj'
    direct object

1.1.2.13.1. Users shall view their notes taken on a learning space in the notes section of their profile pages.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'view'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'view'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: view
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'view'
    token.dep_ = 'ROOT'
    root


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'notes'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'view'
    token.dep_ = 'dobj'
    direct object


    TOKEN: taken
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'notes'
    token.dep_ = 'acl'
    clausal modifier of noun (adjectival clause)


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'taken'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'compound'
    compound


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'taken'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'section'
    token.dep_ = 'det'
    determiner


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'section'
    token.dep_ = 'compound'
    compound


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'section'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'pages'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'pages'
    token.dep_ = 'compound'
    compound


    TOKEN: pages
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.14.1. Users shall be able to annotate post images and texts in learning spaces.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'annotate'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: annotate
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: post
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'images'
    token.dep_ = 'compound'
    compound


    TOKEN: images
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'annotate'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'images'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: texts
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'images'
    token.dep_ = 'conj'
    conjunct


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'annotate'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'in'
    token.dep_ = 'pcomp'
    complement of preposition


    TOKEN: spaces
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'learning'
    token.dep_ = 'dobj'
    direct object

1.1.2.14.2. Users shall be able to view annotations made by other users.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'view'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: view
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'view'
    token.dep_ = 'dobj'
    direct object


    TOKEN: made
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'annotations'
    token.dep_ = 'acl'
    clausal modifier of noun (adjectival clause)


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'made'
    token.dep_ = 'agent'
    agent


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.14.3. Users shall be able to browse annotations by category, by course, by history, and by upvotes they have received.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'received'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'browse'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: browse
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'dobj'
    direct object


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'browse'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: category
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'received'
    token.dep_ = 'punct'
    punctuation


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'received'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: course
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'by'
    token.dep_ = 'punct'
    punctuation


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'by'
    token.dep_ = 'conj'
    conjunct


    TOKEN: history
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'by'
    token.dep_ = 'punct'
    punctuation


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'by'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'received'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: upvotes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'received'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: have
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'received'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: received
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'received'
    token.dep_ = 'ROOT'
    root

1.1.2.14.4. Users shall access the annotations they have added for course material from the annotations section of their profile pages.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'access'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'access'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: access
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'access'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'annotations'
    token.dep_ = 'det'
    determiner


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'access'
    token.dep_ = 'dobj'
    direct object


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'added'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: have
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'added'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: added
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'annotations'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'added'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: course
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'material'
    token.dep_ = 'compound'
    compound


    TOKEN: material
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: from
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'added'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'section'
    token.dep_ = 'det'
    determiner


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'section'
    token.dep_ = 'compound'
    compound


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'from'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'section'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'pages'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'pages'
    token.dep_ = 'compound'
    compound


    TOKEN: pages
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.1.2.15.1. Users shall be able to see all learning spaces they created or enrolled in.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'see'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: see
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: all
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'spaces'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'spaces'
    token.dep_ = 'compound'
    compound


    TOKEN: spaces
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'see'
    token.dep_ = 'dobj'
    direct object


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'created'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: created
    =====
    token.tag_ = 'VBD'
    verb, past tense
    token.head.text = 'spaces'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'created'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: enrolled
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'created'
    token.dep_ = 'conj'
    conjunct


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'enrolled'
    token.dep_ = 'prep'
    prepositional modifier

1.1.2.16.1. Users shall be able to see the feedback they have received for their learning content contributions in the recommendations section.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'see'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: see
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'feedback'
    token.dep_ = 'det'
    determiner


    TOKEN: feedback
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'see'
    token.dep_ = 'dobj'
    direct object


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'received'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: have
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'received'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: received
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'feedback'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'received'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'contributions'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: learning
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'contributions'
    token.dep_ = 'compound'
    compound


    TOKEN: content
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'contributions'
    token.dep_ = 'compound'
    compound


    TOKEN: contributions
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'contributions'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'section'
    token.dep_ = 'det'
    determiner


    TOKEN: recommendations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'section'
    token.dep_ = 'compound'
    compound


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.1.1. Users shall see each other's profiles.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'see'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'see'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: see
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'see'
    token.dep_ = 'ROOT'
    root


    TOKEN: each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'other'
    token.dep_ = 'det'
    determiner


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'profiles'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: 's
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'other'
    token.dep_ = 'case'
    case marking


    TOKEN: profiles
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'see'
    token.dep_ = 'dobj'
    direct object

1.1.3.1.2. Users shall be able to follow each other.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'follow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: follow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'other'
    token.dep_ = 'det'
    determiner


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'follow'
    token.dep_ = 'dobj'
    direct object

1.1.3.1.3. Users shall see the information of people they follow; their achievements and activities.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'see'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'see'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: see
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'see'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'information'
    token.dep_ = 'det'
    determiner


    TOKEN: information
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'see'
    token.dep_ = 'dobj'
    direct object


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'information'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: people
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'follow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: follow
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'people'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: ;
    =====
    token.tag_ = ':'
    punctuation mark, colon or ellipsis
    token.head.text = 'see'
    token.dep_ = 'punct'
    punctuation


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'achievements'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: achievements
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'Users'
    token.dep_ = 'appos'
    appositional modifier


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'achievements'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: activities
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'achievements'
    token.dep_ = 'conj'
    conjunct

1.1.3.1.4. Users shall be able to share notes with each other.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'share'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: share
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'share'
    token.dep_ = 'dobj'
    direct object


    TOKEN: with
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'notes'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'other'
    token.dep_ = 'det'
    determiner


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'with'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.1.5. Users shall be able to block other users.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'block'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: block
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'block'
    token.dep_ = 'dobj'
    direct object

1.1.3.1.6. Users could prevent other users to see their profile by blocking them.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'prevent'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: could
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'prevent'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: prevent
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'prevent'
    token.dep_ = 'ROOT'
    root


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'prevent'
    token.dep_ = 'dobj'
    direct object


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'see'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: see
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'prevent'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'profile'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'see'
    token.dep_ = 'dobj'
    direct object


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'see'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: blocking
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'by'
    token.dep_ = 'pcomp'
    complement of preposition


    TOKEN: them
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'blocking'
    token.dep_ = 'dobj'
    direct object

1.1.3.2.1.1. Users shall enter a title and description and choose an icon and categories to create a learning space.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'enter'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'enter'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: enter
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'enter'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'title'
    token.dep_ = 'det'
    determiner


    TOKEN: title
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'enter'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'title'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: description
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'title'
    token.dep_ = 'conj'
    conjunct


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'enter'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: choose
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'enter'
    token.dep_ = 'conj'
    conjunct


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'icon'
    token.dep_ = 'det'
    determiner


    TOKEN: icon
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'choose'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'icon'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: categories
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'icon'
    token.dep_ = 'conj'
    conjunct


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'create'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: create
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'choose'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'create'
    token.dep_ = 'dobj'
    direct object

1.1.3.2.2.1. Users shall be able to edit all material they provided.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'edit'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: edit
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: all
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'material'
    token.dep_ = 'det'
    determiner


    TOKEN: material
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'edit'
    token.dep_ = 'dobj'
    direct object


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'provided'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: provided
    =====
    token.tag_ = 'VBD'
    verb, past tense
    token.head.text = 'material'
    token.dep_ = 'relcl'
    relative clause modifier

1.1.3.2.2.2. Users shall be able to delete learning spaces they created.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'delete'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: delete
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: learning
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'spaces'
    token.dep_ = 'compound'
    compound


    TOKEN: spaces
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'delete'
    token.dep_ = 'dobj'
    direct object


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'created'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: created
    =====
    token.tag_ = 'VBD'
    verb, past tense
    token.head.text = 'spaces'
    token.dep_ = 'relcl'
    relative clause modifier

1.1.3.2.3.1. Users shall see the contents in the learning space.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'see'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'see'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: see
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'see'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'contents'
    token.dep_ = 'det'
    determiner


    TOKEN: contents
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'see'
    token.dep_ = 'dobj'
    direct object


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'contents'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'space'
    token.dep_ = 'compound'
    compound


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.3.2. Users shall be able to navigate learning material in the order they desire.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'navigate'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: navigate
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'material'
    token.dep_ = 'compound'
    compound


    TOKEN: material
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'navigate'
    token.dep_ = 'dobj'
    direct object


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'navigate'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'order'
    token.dep_ = 'det'
    determiner


    TOKEN: order
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'desire'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: desire
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'be'
    token.dep_ = 'ccomp'
    clausal complement

1.1.3.2.3.3. Users shall be able to review other users in terms of providing learning material by giving stars and optionally providing feedback.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'review'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: review
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'review'
    token.dep_ = 'dobj'
    direct object


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'review'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: terms
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'terms'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: providing
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'of'
    token.dep_ = 'pcomp'
    complement of preposition


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'material'
    token.dep_ = 'compound'
    compound


    TOKEN: material
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'providing'
    token.dep_ = 'dobj'
    direct object


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'providing'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: giving
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'by'
    token.dep_ = 'pcomp'
    complement of preposition


    TOKEN: stars
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'giving'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'giving'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: optionally
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'providing'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: providing
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'giving'
    token.dep_ = 'conj'
    conjunct


    TOKEN: feedback
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'providing'
    token.dep_ = 'dobj'
    direct object

1.1.3.2.3.4. Users shall be able to report inappropriate comments in the discussion forum of the learning space.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'report'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: report
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: inappropriate
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'comments'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: comments
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'report'
    token.dep_ = 'dobj'
    direct object


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'comments'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'forum'
    token.dep_ = 'det'
    determiner


    TOKEN: discussion
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'forum'
    token.dep_ = 'compound'
    compound


    TOKEN: forum
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'forum'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'compound'
    compound


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.4.1. Each user shall have his/her notes section under each lecture.


    TOKEN: Each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'user'
    token.dep_ = 'det'
    determiner


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: his
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'section'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: /
    =====
    token.tag_ = 'SYM'
    symbol
    token.head.text = 'notes'
    token.dep_ = 'punct'
    punctuation


    TOKEN: her
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'notes'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'section'
    token.dep_ = 'compound'
    compound


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: under
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'section'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'lecture'
    token.dep_ = 'det'
    determiner


    TOKEN: lecture
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'under'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.4.2. Users shall create and edit notes under the notes section via typing.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'create'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'create'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: create
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'create'
    token.dep_ = 'ROOT'
    root


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'create'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: edit
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notes'
    token.dep_ = 'compound'
    compound


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'create'
    token.dep_ = 'conj'
    conjunct


    TOKEN: under
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'notes'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'section'
    token.dep_ = 'det'
    determiner


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'section'
    token.dep_ = 'compound'
    compound


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'under'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: via
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'create'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: typing
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'via'
    token.dep_ = 'pcomp'
    complement of preposition

1.1.3.2.4.3. Users shall be able to mention other notes from other learning spaces or/and other users in his/her.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'mention'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: mention
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'notes'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'mention'
    token.dep_ = 'dobj'
    direct object


    TOKEN: from
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'notes'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'spaces'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: learning
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'spaces'
    token.dep_ = 'compound'
    compound


    TOKEN: spaces
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'from'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'spaces'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: /
    =====
    token.tag_ = 'SYM'
    symbol
    token.head.text = 'be'
    token.dep_ = 'punct'
    punctuation


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'be'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'conj'
    conjunct


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'users'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: his
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'her'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: /
    =====
    token.tag_ = 'SYM'
    symbol
    token.head.text = 'her'
    token.dep_ = 'punct'
    punctuation


    TOKEN: her
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.4.4. Users shall connect, annotate and tag notes.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'connect'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'connect'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: connect
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'connect'
    token.dep_ = 'ROOT'
    root


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'connect'
    token.dep_ = 'punct'
    punctuation


    TOKEN: annotate
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'connect'
    token.dep_ = 'conj'
    conjunct


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'annotate'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: tag
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'annotate'
    token.dep_ = 'conj'
    conjunct


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'connect'
    token.dep_ = 'dobj'
    direct object

1.1.3.2.5.1. Participants shall be able to create community events for that learning space.


    TOKEN: Participants
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'create'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: create
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: community
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'events'
    token.dep_ = 'compound'
    compound


    TOKEN: events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'create'
    token.dep_ = 'dobj'
    direct object


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'events'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: that
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'compound'
    compound


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.5.2. Created events shall only be available to currently enrolled learners.


    TOKEN: Created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'events'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: only
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'be'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: available
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'available'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: currently
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'enrolled'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: enrolled
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'learners'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: learners
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.5.3. Created events should have a specific date, duration, location and limit for the number of participants.


    TOKEN: Created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'events'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'date'
    token.dep_ = 'det'
    determiner


    TOKEN: specific
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'date'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: date
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'date'
    token.dep_ = 'punct'
    punctuation


    TOKEN: duration
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'date'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'duration'
    token.dep_ = 'punct'
    punctuation


    TOKEN: location
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'duration'
    token.dep_ = 'conj'
    conjunct


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'location'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: limit
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'location'
    token.dep_ = 'conj'
    conjunct


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'date'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'number'
    token.dep_ = 'det'
    determiner


    TOKEN: number
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'number'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: participants
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.5.4. The event creator can give a brief description of the topics of discussion for the event.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'creator'
    token.dep_ = 'det'
    determiner


    TOKEN: event
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'creator'
    token.dep_ = 'compound'
    compound


    TOKEN: creator
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'give'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: can
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'give'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: give
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'give'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'description'
    token.dep_ = 'det'
    determiner


    TOKEN: brief
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'description'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: description
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'give'
    token.dep_ = 'dobj'
    direct object


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'description'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'topics'
    token.dep_ = 'det'
    determiner


    TOKEN: topics
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'topics'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: discussion
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'topics'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'event'
    token.dep_ = 'det'
    determiner


    TOKEN: event
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.5.5. Event creators shall be able to cancel events that they have created.


    TOKEN: Event
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'creators'
    token.dep_ = 'compound'
    compound


    TOKEN: creators
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'cancel'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: cancel
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'cancel'
    token.dep_ = 'dobj'
    direct object


    TOKEN: that
    =====
    token.tag_ = 'WDT'
    wh-determiner
    token.head.text = 'created'
    token.dep_ = 'dobj'
    direct object


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'created'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: have
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'created'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'events'
    token.dep_ = 'relcl'
    relative clause modifier

1.1.3.2.5.6. Created events should be visible on the learning space info page along with the date, duration, location and number of participants.


    TOKEN: Created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'events'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: visible
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'visible'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'page'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'page'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'info'
    token.dep_ = 'compound'
    compound


    TOKEN: info
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: along
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'page'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: with
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'along'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'date'
    token.dep_ = 'det'
    determiner


    TOKEN: date
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'with'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'date'
    token.dep_ = 'punct'
    punctuation


    TOKEN: duration
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'date'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'duration'
    token.dep_ = 'punct'
    punctuation


    TOKEN: location
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'duration'
    token.dep_ = 'conj'
    conjunct


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'location'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: number
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'location'
    token.dep_ = 'conj'
    conjunct


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'duration'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: participants
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.5.7. The number of learners who will join the event will be visible on the event information.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'number'
    token.dep_ = 'det'
    determiner


    TOKEN: number
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'number'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: learners
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: who
    =====
    token.tag_ = 'WP'
    wh-pronoun, personal
    token.head.text = 'join'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: will
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'join'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: join
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'learners'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'event'
    token.dep_ = 'det'
    determiner


    TOKEN: event
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'join'
    token.dep_ = 'dobj'
    direct object


    TOKEN: will
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: visible
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'be'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'information'
    token.dep_ = 'det'
    determiner


    TOKEN: event
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'information'
    token.dep_ = 'compound'
    compound


    TOKEN: information
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition

1.1.3.2.7.1. Participants of a learning space shall be able to create discussion posts.


    TOKEN: Participants
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'Participants'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'create'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: create
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: discussion
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'posts'
    token.dep_ = 'compound'
    compound


    TOKEN: posts
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'create'
    token.dep_ = 'dobj'
    direct object

1.1.4.1. Participants shall deliver learning material in form of posts which contain text and images.


    TOKEN: Participants
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'deliver'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'deliver'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: deliver
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'deliver'
    token.dep_ = 'ROOT'
    root


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'deliver'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: material
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'learning'
    token.dep_ = 'dobj'
    direct object


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'learning'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: form
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'form'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: posts
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: which
    =====
    token.tag_ = 'WDT'
    wh-determiner
    token.head.text = 'contain'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: contain
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'posts'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: text
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'contain'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'text'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: images
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'text'
    token.dep_ = 'conj'
    conjunct

1.1.4.2. Learning Space shall have the main page where users can see introduction, events, sections, notes, annotations.


    TOKEN: Learning
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Space'
    token.dep_ = 'compound'
    compound


    TOKEN: Space
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'page'
    token.dep_ = 'det'
    determiner


    TOKEN: main
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'page'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: where
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'see'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'see'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: can
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'see'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: see
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'page'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: introduction
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'see'
    token.dep_ = 'dobj'
    direct object


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'introduction'
    token.dep_ = 'punct'
    punctuation


    TOKEN: events
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'introduction'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'events'
    token.dep_ = 'punct'
    punctuation


    TOKEN: sections
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'events'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'sections'
    token.dep_ = 'punct'
    punctuation


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'sections'
    token.dep_ = 'conj'
    conjunct


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'notes'
    token.dep_ = 'punct'
    punctuation


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notes'
    token.dep_ = 'conj'
    conjunct

1.1.4.3. The creator of a learning space shall be able to add additional admins to the learning space.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'creator'
    token.dep_ = 'det'
    determiner


    TOKEN: creator
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'creator'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'compound'
    compound


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'add'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: add
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: additional
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'admins'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: admins
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'add'
    token.dep_ = 'dobj'
    direct object


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'add'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition

1.1.5.1. Admin shall evaluate reports and takes action accordingly.


    TOKEN: Admin
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'evaluate'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'evaluate'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: evaluate
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'evaluate'
    token.dep_ = 'ROOT'
    root


    TOKEN: reports
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'evaluate'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'evaluate'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: takes
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'evaluate'
    token.dep_ = 'conj'
    conjunct


    TOKEN: action
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'takes'
    token.dep_ = 'dobj'
    direct object


    TOKEN: accordingly
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'takes'
    token.dep_ = 'advmod'
    adverbial modifier

1.1.5.2. Admin shall be able to ban users permanently and temporarily.


    TOKEN: Admin
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'ban'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: ban
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'ban'
    token.dep_ = 'dobj'
    direct object


    TOKEN: permanently
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'ban'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'permanently'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: temporarily
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'permanently'
    token.dep_ = 'conj'
    conjunct

1.1.5.3. Admin shall be able to view all contents.


    TOKEN: Admin
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'view'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: view
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: all
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'contents'
    token.dep_ = 'det'
    determiner


    TOKEN: contents
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'view'
    token.dep_ = 'dobj'
    direct object

1.1.5.4. Admin shall be able to remove any content.


    TOKEN: Admin
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'remove'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: remove
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: any
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'content'
    token.dep_ = 'det'
    determiner


    TOKEN: content
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'remove'
    token.dep_ = 'dobj'
    direct object

1.2.1.1. Users will get various learning spaces as recommendations.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'get'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: will
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'get'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: get
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'get'
    token.dep_ = 'ROOT'
    root


    TOKEN: various
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'spaces'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: learning
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'spaces'
    token.dep_ = 'compound'
    compound


    TOKEN: spaces
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'get'
    token.dep_ = 'dobj'
    direct object


    TOKEN: as
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'get'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: recommendations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'as'
    token.dep_ = 'pobj'
    object of preposition

1.2.1.2. These recommendations will be based on users' preferences about the topics of learning space. Learning spaces that have similar topics will be chosen to recommend.


    TOKEN: These
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'recommendations'
    token.dep_ = 'det'
    determiner


    TOKEN: recommendations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'based'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: will
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'based'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'based'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: based
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'based'
    token.dep_ = 'ROOT'
    root


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'based'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'preferences'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: '
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'users'
    token.dep_ = 'case'
    case marking


    TOKEN: preferences
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: about
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'preferences'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'topics'
    token.dep_ = 'det'
    determiner


    TOKEN: topics
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'about'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'topics'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'of'
    token.dep_ = 'pcomp'
    complement of preposition


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'learning'
    token.dep_ = 'dobj'
    direct object

1.2.1.3. The recommendations will be displayed on the home page.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'recommendations'
    token.dep_ = 'det'
    determiner


    TOKEN: recommendations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'displayed'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: will
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'displayed'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'displayed'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: displayed
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'displayed'
    token.dep_ = 'ROOT'
    root


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'displayed'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'page'
    token.dep_ = 'det'
    determiner


    TOKEN: home
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition

1.2.2.1 Users shall get notifications from the system.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'get'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'get'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: get
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'get'
    token.dep_ = 'ROOT'
    root


    TOKEN: notifications
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'get'
    token.dep_ = 'dobj'
    direct object


    TOKEN: from
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'notifications'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'from'
    token.dep_ = 'pobj'
    object of preposition

1.2.2.2 The system shall notify users who did not complete almost done section of the registration.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: who
    =====
    token.tag_ = 'WP'
    wh-pronoun, personal
    token.head.text = 'complete'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: did
    =====
    token.tag_ = 'VBD'
    verb, past tense
    token.head.text = 'complete'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: not
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'complete'
    token.dep_ = 'neg'
    negation modifier


    TOKEN: complete
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'users'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: almost
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'done'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: done
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'section'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: section
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'section'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'registration'
    token.dep_ = 'det'
    determiner


    TOKEN: registration
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.2.2.3 The system shall notify users regarding any posts on the discussion forum of the lectures they take or give.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: regarding
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'notify'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: any
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'posts'
    token.dep_ = 'det'
    determiner


    TOKEN: posts
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'regarding'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'posts'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'forum'
    token.dep_ = 'det'
    determiner


    TOKEN: discussion
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'forum'
    token.dep_ = 'compound'
    compound


    TOKEN: forum
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'forum'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'lectures'
    token.dep_ = 'det'
    determiner


    TOKEN: lectures
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'take'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: take
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'lectures'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'take'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: give
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'take'
    token.dep_ = 'conj'
    conjunct

1.2.2.4 The system shall notify users when other users share notes with them.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: when
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'share'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'share'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: share
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'share'
    token.dep_ = 'dobj'
    direct object


    TOKEN: with
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'share'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: them
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'with'
    token.dep_ = 'pobj'
    object of preposition

1.2.2.5 The system shall notify users when they earn an achievement.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: when
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'earn'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'earn'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: earn
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'achievement'
    token.dep_ = 'det'
    determiner


    TOKEN: achievement
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'earn'
    token.dep_ = 'dobj'
    direct object

1.2.2.6 The system shall notify users to give feedback after each completed lecture.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'give'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: give
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: feedback
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'give'
    token.dep_ = 'dobj'
    direct object


    TOKEN: after
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'give'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'lecture'
    token.dep_ = 'det'
    determiner


    TOKEN: completed
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'lecture'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: lecture
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'after'
    token.dep_ = 'pobj'
    object of preposition

1.2.2.7 The system shall notify lecturers when a user provides feedback on one of their courses.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: lecturers
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: when
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'provides'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'user'
    token.dep_ = 'det'
    determiner


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provides'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: provides
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: feedback
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provides'
    token.dep_ = 'dobj'
    direct object


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'provides'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: one
    =====
    token.tag_ = 'CD'
    cardinal number
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'one'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'courses'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: courses
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.2.2.8 The system shall notify users when an event is created for a lecture they are taking or giving.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: when
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'created'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'event'
    token.dep_ = 'det'
    determiner


    TOKEN: event
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'created'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: is
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'created'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'created'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'lecture'
    token.dep_ = 'det'
    determiner


    TOKEN: lecture
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'taking'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: are
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'taking'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: taking
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'lecture'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'taking'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: giving
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'taking'
    token.dep_ = 'conj'
    conjunct

1.2.2.9 The system shall notify users when a poll is created in a lecture they are taking.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: when
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'created'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'poll'
    token.dep_ = 'det'
    determiner


    TOKEN: poll
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'created'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: is
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'created'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'created'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'lecture'
    token.dep_ = 'det'
    determiner


    TOKEN: lecture
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'taking'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: are
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'taking'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: taking
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'lecture'
    token.dep_ = 'relcl'
    relative clause modifier

1.2.2.10 The system shall notify users when they do not use the application for more than one day.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: when
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'use'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'use'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: do
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'use'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: not
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'use'
    token.dep_ = 'neg'
    negation modifier


    TOKEN: use
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'application'
    token.dep_ = 'det'
    determiner


    TOKEN: application
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'use'
    token.dep_ = 'dobj'
    direct object


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'use'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: more
    =====
    token.tag_ = 'JJR'
    adjective, comparative
    token.head.text = 'one'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: than
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'one'
    token.dep_ = 'quantmod'
    modifier of quantifier


    TOKEN: one
    =====
    token.tag_ = 'CD'
    cardinal number
    token.head.text = 'day'
    token.dep_ = 'nummod'
    numeric modifier


    TOKEN: day
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition

1.2.2.11 Users shall be able to turn their notifications on or off.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'turn'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: turn
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'notifications'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: notifications
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'turn'
    token.dep_ = 'dobj'
    direct object


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'notifications'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'on'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: off
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'on'
    token.dep_ = 'conj'
    conjunct

1.2.2.12 The system shall notify users when other users follow them.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'notify'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notify'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: notify
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notify'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notify'
    token.dep_ = 'dobj'
    direct object


    TOKEN: when
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'follow'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'follow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: follow
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'notify'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: them
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'follow'
    token.dep_ = 'dobj'
    direct object

1.2.3.1 The system shall implement semantic searching.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'implement'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'implement'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: implement
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'implement'
    token.dep_ = 'ROOT'
    root


    TOKEN: semantic
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'searching'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: searching
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'implement'
    token.dep_ = 'dobj'
    direct object

1.2.3.2 The system shall allow users to search for other users.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'search'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'search'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: search
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'search'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: other
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition

1.2.3.2.1 The system shall allow searching for users by their username.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: searching
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'allow'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'searching'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'searching'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'username'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: username
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition

1.2.3.3 The system shall allow users to search for courses.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'search'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'search'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: search
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'search'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: courses
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition

1.2.3.4 The system shall offer filters for search results.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'offer'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'offer'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: offer
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'offer'
    token.dep_ = 'ROOT'
    root


    TOKEN: filters
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'offer'
    token.dep_ = 'dobj'
    direct object


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'offer'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: search
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'results'
    token.dep_ = 'compound'
    compound


    TOKEN: results
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition

1.2.3.4.1 The system shall allow users to filter search results as only users or only courses.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'filter'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'filter'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: filter
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: search
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'results'
    token.dep_ = 'compound'
    compound


    TOKEN: results
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'filter'
    token.dep_ = 'dobj'
    direct object


    TOKEN: as
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'filter'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: only
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'users'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'as'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'users'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: only
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'courses'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: courses
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'users'
    token.dep_ = 'conj'
    conjunct

1.2.3.5 The system shall allow users to browse for recommended courses.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'browse'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: browse
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'browse'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: recommended
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'courses'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: courses
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition

1.2.3.6 The system shall allow users to browse for learning spaces created or joined by a user's from his/her profile page.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'browse'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: browse
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'browse'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'for'
    token.dep_ = 'pcomp'
    complement of preposition


    TOKEN: spaces
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'learning'
    token.dep_ = 'dobj'
    direct object


    TOKEN: created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'spaces'
    token.dep_ = 'acl'
    clausal modifier of noun (adjectival clause)


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'created'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: joined
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'created'
    token.dep_ = 'conj'
    conjunct


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'joined'
    token.dep_ = 'agent'
    agent


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'user'
    token.dep_ = 'det'
    determiner


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: 's
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'user'
    token.dep_ = 'case'
    case marking


    TOKEN: from
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'user'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: his
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: /
    =====
    token.tag_ = 'SYM'
    symbol
    token.head.text = 'page'
    token.dep_ = 'punct'
    punctuation


    TOKEN: her
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'from'
    token.dep_ = 'pobj'
    object of preposition

1.2.3.7 The system shall allow users to browse their notes.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'browse'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: browse
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'notes'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'dobj'
    direct object

1.2.3.8 The system shall allow users to browse for notes filtered by their tags.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'browse'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: browse
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'browse'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: notes
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: filtered
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'notes'
    token.dep_ = 'acl'
    clausal modifier of noun (adjectival clause)


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'filtered'
    token.dep_ = 'agent'
    agent


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'tags'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: tags
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition

1.2.3.9 The system shall allow users to browse the activities and achievements of users they follow on the user's profile page.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'browse'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: browse
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'activities'
    token.dep_ = 'det'
    determiner


    TOKEN: activities
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'browse'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'activities'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: achievements
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'activities'
    token.dep_ = 'conj'
    conjunct


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'activities'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'follow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: follow
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'activities'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'follow'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'user'
    token.dep_ = 'det'
    determiner


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: 's
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'user'
    token.dep_ = 'case'
    case marking


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition

1.2.5.1. The forum features should be unique to the learning space. There is also a discussion section for the learning space.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'features'
    token.dep_ = 'det'
    determiner


    TOKEN: forum
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'features'
    token.dep_ = 'compound'
    compound


    TOKEN: features
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: unique
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'unique'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'space'
    token.dep_ = 'det'
    determiner


    TOKEN: learning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'space'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: space
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition

1.2.5.2. The discussion contents should be stored.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'contents'
    token.dep_ = 'det'
    determiner


    TOKEN: discussion
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'contents'
    token.dep_ = 'compound'
    compound


    TOKEN: contents
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'stored'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'stored'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'stored'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: stored
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'stored'
    token.dep_ = 'ROOT'
    root

1.2.5.3. The forum should include a timestamp for each entry and the sender's name should be at top of the each entry.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'forum'
    token.dep_ = 'det'
    determiner


    TOKEN: forum
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'include'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'include'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: include
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'include'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'timestamp'
    token.dep_ = 'det'
    determiner


    TOKEN: timestamp
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'include'
    token.dep_ = 'dobj'
    direct object


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'timestamp'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'entry'
    token.dep_ = 'det'
    determiner


    TOKEN: entry
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'entry'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'sender'
    token.dep_ = 'det'
    determiner


    TOKEN: sender
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'name'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: 's
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'sender'
    token.dep_ = 'case'
    case marking


    TOKEN: name
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'include'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: at
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'be'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: top
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'at'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'top'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'entry'
    token.dep_ = 'det'
    determiner


    TOKEN: each
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'entry'
    token.dep_ = 'det'
    determiner


    TOKEN: entry
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

1.2.5.4. The discussion entry creator's name should direct any user to his/her profile page.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'creator'
    token.dep_ = 'det'
    determiner


    TOKEN: discussion
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'creator'
    token.dep_ = 'compound'
    compound


    TOKEN: entry
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'creator'
    token.dep_ = 'compound'
    compound


    TOKEN: creator
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'name'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: 's
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'creator'
    token.dep_ = 'case'
    case marking


    TOKEN: name
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'direct'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'direct'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: direct
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'direct'
    token.dep_ = 'ROOT'
    root


    TOKEN: any
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'user'
    token.dep_ = 'det'
    determiner


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'direct'
    token.dep_ = 'dobj'
    direct object


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'direct'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: his
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: /
    =====
    token.tag_ = 'SYM'
    symbol
    token.head.text = 'page'
    token.dep_ = 'punct'
    punctuation


    TOKEN: her
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition

1.2.6.1. System shall allow users to optionally provide additional information about their full names, birth date, state of education, gender just after the signup stage.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'provide'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'provide'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: optionally
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'provide'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: provide
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: additional
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'information'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: information
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provide'
    token.dep_ = 'dobj'
    direct object


    TOKEN: about
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'information'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'names'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: full
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'names'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: names
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'about'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'names'
    token.dep_ = 'punct'
    punctuation


    TOKEN: birth
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'date'
    token.dep_ = 'compound'
    compound


    TOKEN: date
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'names'
    token.dep_ = 'appos'
    appositional modifier


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'date'
    token.dep_ = 'punct'
    punctuation


    TOKEN: state
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'date'
    token.dep_ = 'conj'
    conjunct


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'state'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: education
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'names'
    token.dep_ = 'punct'
    punctuation


    TOKEN: gender
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'names'
    token.dep_ = 'appos'
    appositional modifier


    TOKEN: just
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'after'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: after
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'provide'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'stage'
    token.dep_ = 'det'
    determiner


    TOKEN: signup
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'stage'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: stage
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'after'
    token.dep_ = 'pobj'
    object of preposition

1.2.6.2. System should allow users to select educational topics, and titles which they are interested in in the almost done stage.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'select'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'select'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: select
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: educational
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'topics'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: topics
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'select'
    token.dep_ = 'dobj'
    direct object


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'allow'
    token.dep_ = 'punct'
    punctuation


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'allow'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: titles
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'allow'
    token.dep_ = 'conj'
    conjunct


    TOKEN: which
    =====
    token.tag_ = 'WDT'
    wh-determiner
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: they
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'are'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: are
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'titles'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: interested
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'are'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'interested'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'interested'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'stage'
    token.dep_ = 'det'
    determiner


    TOKEN: almost
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'done'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: done
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'stage'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: stage
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition

1.2.7.1. System shall allow users to delete their accounts.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'allow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'allow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: allow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ROOT'
    root


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'delete'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'delete'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: delete
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'allow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: their
    =====
    token.tag_ = 'PRP$'
    pronoun, possessive
    token.head.text = 'accounts'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: accounts
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'delete'
    token.dep_ = 'dobj'
    direct object

1.2.7.2. All personalized information about the deleted users have to be anonymized or completely deleted according to the privacy policy that will be determined later on.


    TOKEN: All
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'information'
    token.dep_ = 'det'
    determiner


    TOKEN: personalized
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'information'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: information
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: about
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'information'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'users'
    token.dep_ = 'det'
    determiner


    TOKEN: deleted
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'users'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'about'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: have
    =====
    token.tag_ = 'VBP'
    verb, non-3rd person singular present
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'anonymized'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'anonymized'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: anonymized
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'have'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'anonymized'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: completely
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'deleted'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: deleted
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'anonymized'
    token.dep_ = 'conj'
    conjunct


    TOKEN: according
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'deleted'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'according'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'policy'
    token.dep_ = 'det'
    determiner


    TOKEN: privacy
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'policy'
    token.dep_ = 'compound'
    compound


    TOKEN: policy
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: that
    =====
    token.tag_ = 'WDT'
    wh-determiner
    token.head.text = 'determined'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: will
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'determined'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'determined'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: determined
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'policy'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: later
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'determined'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'determined'
    token.dep_ = 'prep'
    prepositional modifier

1.2.8.1. Users shall be able to create annotations.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'create'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: create
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'create'
    token.dep_ = 'dobj'
    direct object

1.2.8.2. Annotations should comply to the W3 Web Annotation Data Model.


    TOKEN: Annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'comply'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'comply'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: comply
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'comply'
    token.dep_ = 'ROOT'
    root


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'comply'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'Model'
    token.dep_ = 'det'
    determiner


    TOKEN: W3
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Model'
    token.dep_ = 'compound'
    compound


    TOKEN: Web
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Annotation'
    token.dep_ = 'compound'
    compound


    TOKEN: Annotation
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Model'
    token.dep_ = 'compound'
    compound


    TOKEN: Data
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Model'
    token.dep_ = 'compound'
    compound


    TOKEN: Model
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition

1.2.8.3. Owner of the annotations shall be able to set annotations as public or private.


    TOKEN: Owner
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'Owner'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'annotations'
    token.dep_ = 'det'
    determiner


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'set'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: set
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'set'
    token.dep_ = 'dobj'
    direct object


    TOKEN: as
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'set'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: public
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'as'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'public'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: private
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'public'
    token.dep_ = 'conj'
    conjunct

1.2.8.4. Created annotations shall be reachable from both profile page and relevant target resource(s).


    TOKEN: Created
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'annotations'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: reachable
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: from
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'reachable'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: both
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'page'
    token.dep_ = 'det'
    determiner


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'from'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'page'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: relevant
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'resource'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: target
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'resource'
    token.dep_ = 'compound'
    compound


    TOKEN: resource
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'conj'
    conjunct

1.2.8.5. Annotations may have a body attribute.


    TOKEN: Annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: may
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'attribute'
    token.dep_ = 'det'
    determiner


    TOKEN: body
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'attribute'
    token.dep_ = 'compound'
    compound


    TOKEN: attribute
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object

1.2.8.6. Annotations shall have a target attribute.


    TOKEN: Annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'attribute'
    token.dep_ = 'det'
    determiner


    TOKEN: target
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'attribute'
    token.dep_ = 'compound'
    compound


    TOKEN: attribute
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object

1.2.8.7. Annotations may have more than one body attribute and one target attribute.


    TOKEN: Annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: may
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: more
    =====
    token.tag_ = 'JJR'
    adjective, comparative
    token.head.text = 'one'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: than
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'one'
    token.dep_ = 'quantmod'
    modifier of quantifier


    TOKEN: one
    =====
    token.tag_ = 'CD'
    cardinal number
    token.head.text = 'attribute'
    token.dep_ = 'nummod'
    numeric modifier


    TOKEN: body
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'attribute'
    token.dep_ = 'compound'
    compound


    TOKEN: attribute
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'attribute'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: one
    =====
    token.tag_ = 'CD'
    cardinal number
    token.head.text = 'attribute'
    token.dep_ = 'nummod'
    numeric modifier


    TOKEN: target
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'attribute'
    token.dep_ = 'compound'
    compound


    TOKEN: attribute
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'attribute'
    token.dep_ = 'conj'
    conjunct

1.2.8.8. Annotations with public visibility should be listed on that annotation's creator's profile page.


    TOKEN: Annotations
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'listed'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: with
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'Annotations'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: public
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'visibility'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: visibility
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'with'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'listed'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'listed'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: listed
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'listed'
    token.dep_ = 'ROOT'
    root


    TOKEN: on
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'listed'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: that
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'annotation'
    token.dep_ = 'det'
    determiner


    TOKEN: annotation
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: 's
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'annotation'
    token.dep_ = 'case'
    case marking


    TOKEN: creator
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'poss'
    possession modifier


    TOKEN: 's
    =====
    token.tag_ = 'POS'
    possessive ending
    token.head.text = 'creator'
    token.dep_ = 'case'
    case marking


    TOKEN: profile
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'page'
    token.dep_ = 'compound'
    compound


    TOKEN: page
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'on'
    token.dep_ = 'pobj'
    object of preposition

2.1.1. System should have a Website interface that provides an web specific user experience.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'interface'
    token.dep_ = 'det'
    determiner


    TOKEN: Website
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'interface'
    token.dep_ = 'compound'
    compound


    TOKEN: interface
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: that
    =====
    token.tag_ = 'WDT'
    wh-determiner
    token.head.text = 'provides'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: provides
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'interface'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'experience'
    token.dep_ = 'det'
    determiner


    TOKEN: web
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'specific'
    token.dep_ = 'npadvmod'
    noun phrase as adverbial modifier


    TOKEN: specific
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'experience'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'experience'
    token.dep_ = 'compound'
    compound


    TOKEN: experience
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provides'
    token.dep_ = 'dobj'
    direct object

2.1.2. System should have a Android application interface that provides an mobile specific user experience.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'interface'
    token.dep_ = 'det'
    determiner


    TOKEN: Android
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'interface'
    token.dep_ = 'compound'
    compound


    TOKEN: application
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'interface'
    token.dep_ = 'compound'
    compound


    TOKEN: interface
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: that
    =====
    token.tag_ = 'WDT'
    wh-determiner
    token.head.text = 'provides'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: provides
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'interface'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'experience'
    token.dep_ = 'det'
    determiner


    TOKEN: mobile
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'specific'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: specific
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'experience'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'experience'
    token.dep_ = 'compound'
    compound


    TOKEN: experience
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provides'
    token.dep_ = 'dobj'
    direct object

2.1.3. System should support UTF-8 character encoding.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'support'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'support'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: support
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'support'
    token.dep_ = 'ROOT'
    root


    TOKEN: UTF-8
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'encoding'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: character
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'encoding'
    token.dep_ = 'compound'
    compound


    TOKEN: encoding
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'support'
    token.dep_ = 'dobj'
    direct object

2.1.4. System should support English language.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'support'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'support'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: support
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'support'
    token.dep_ = 'ROOT'
    root


    TOKEN: English
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'language'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: language
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'support'
    token.dep_ = 'dobj'
    direct object

2.2.1. Ethical concerns must be considered, so system must follow the rules defined by GDPR/KVKK.


    TOKEN: Ethical
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'concerns'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: concerns
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'considered'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: must
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'considered'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'considered'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: considered
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'follow'
    token.dep_ = 'ccomp'
    clausal complement


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'follow'
    token.dep_ = 'punct'
    punctuation


    TOKEN: so
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'follow'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'follow'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: must
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'follow'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: follow
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'follow'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'rules'
    token.dep_ = 'det'
    determiner


    TOKEN: rules
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'follow'
    token.dep_ = 'dobj'
    direct object


    TOKEN: defined
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'rules'
    token.dep_ = 'acl'
    clausal modifier of noun (adjectival clause)


    TOKEN: by
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'defined'
    token.dep_ = 'agent'
    agent


    TOKEN: GDPR
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'KVKK'
    token.dep_ = 'nmod'
    modifier of nominal


    TOKEN: /
    =====
    token.tag_ = 'SYM'
    symbol
    token.head.text = 'KVKK'
    token.dep_ = 'punct'
    punctuation


    TOKEN: KVKK
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'by'
    token.dep_ = 'pobj'
    object of preposition

2.2.1.1 A well-defined explanation about how users data will be used must be given to users.


    TOKEN: A
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'explanation'
    token.dep_ = 'det'
    determiner


    TOKEN: well
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'defined'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: -
    =====
    token.tag_ = 'HYPH'
    punctuation mark, hyphen
    token.head.text = 'defined'
    token.dep_ = 'punct'
    punctuation


    TOKEN: defined
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'explanation'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: explanation
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'given'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: about
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'explanation'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: how
    =====
    token.tag_ = 'WRB'
    wh-adverb
    token.head.text = 'used'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'data'
    token.dep_ = 'compound'
    compound


    TOKEN: data
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'used'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: will
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'used'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'used'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: used
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'about'
    token.dep_ = 'pcomp'
    complement of preposition


    TOKEN: must
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'given'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'given'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: given
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'given'
    token.dep_ = 'ROOT'
    root


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'given'
    token.dep_ = 'dative'
    dative


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition

2.2.1.2 Users must agree to the Privacy Policy and User Agreement.


    TOKEN: Users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'agree'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: must
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'agree'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: agree
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'agree'
    token.dep_ = 'ROOT'
    root


    TOKEN: to
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'agree'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'Agreement'
    token.dep_ = 'det'
    determiner


    TOKEN: Privacy
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Policy'
    token.dep_ = 'compound'
    compound


    TOKEN: Policy
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Agreement'
    token.dep_ = 'nmod'
    modifier of nominal


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'Policy'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: User
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Agreement'
    token.dep_ = 'compound'
    compound


    TOKEN: Agreement
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'to'
    token.dep_ = 'pobj'
    object of preposition

2.2.1.3 If any change happens in the policy, users must be notified about it.


    TOKEN: If
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'happens'
    token.dep_ = 'mark'
    marker


    TOKEN: any
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'change'
    token.dep_ = 'det'
    determiner


    TOKEN: change
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'happens'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: happens
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'notified'
    token.dep_ = 'advcl'
    adverbial clause modifier


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'happens'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'policy'
    token.dep_ = 'det'
    determiner


    TOKEN: policy
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: ,
    =====
    token.tag_ = ','
    punctuation mark, comma
    token.head.text = 'notified'
    token.dep_ = 'punct'
    punctuation


    TOKEN: users
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'notified'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: must
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'notified'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'notified'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: notified
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'notified'
    token.dep_ = 'ROOT'
    root


    TOKEN: about
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'notified'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: it
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'about'
    token.dep_ = 'pobj'
    object of preposition

2.2.2. Learning Spaces can be private or public. If a LS is private, its content should not be visible to every user in the app.


    TOKEN: Learning
    =====
    token.tag_ = 'NNP'
    noun, proper singular
    token.head.text = 'Spaces'
    token.dep_ = 'compound'
    compound


    TOKEN: Spaces
    =====
    token.tag_ = 'NNPS'
    noun, proper plural
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: can
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: private
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: or
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'private'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: public
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'private'
    token.dep_ = 'conj'
    conjunct

2.3.1 All sensitive data shall be encrypted before storing.


    TOKEN: All
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'data'
    token.dep_ = 'det'
    determiner


    TOKEN: sensitive
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'data'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: data
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'encrypted'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'encrypted'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'encrypted'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: encrypted
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'encrypted'
    token.dep_ = 'ROOT'
    root


    TOKEN: before
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'encrypted'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: storing
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'before'
    token.dep_ = 'pcomp'
    complement of preposition

2.3.2 The system shall block the account if any security issue is observed.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'block'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'block'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: block
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'block'
    token.dep_ = 'ROOT'
    root


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'account'
    token.dep_ = 'det'
    determiner


    TOKEN: account
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'block'
    token.dep_ = 'dobj'
    direct object


    TOKEN: if
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'observed'
    token.dep_ = 'mark'
    marker


    TOKEN: any
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'issue'
    token.dep_ = 'det'
    determiner


    TOKEN: security
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'issue'
    token.dep_ = 'compound'
    compound


    TOKEN: issue
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'observed'
    token.dep_ = 'nsubjpass'
    nominal subject (passive)


    TOKEN: is
    =====
    token.tag_ = 'VBZ'
    verb, 3rd person singular present
    token.head.text = 'observed'
    token.dep_ = 'auxpass'
    auxiliary (passive)


    TOKEN: observed
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'block'
    token.dep_ = 'advcl'
    adverbial clause modifier

2.4.1 The system should be able to handle at least 10.000 users and 500 user actions simultaneously.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'handle'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: handle
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: at
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'least'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: least
    =====
    token.tag_ = 'RBS'
    adverb, superlative
    token.head.text = '10'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: 10
    =====
    token.tag_ = 'CD'
    cardinal number
    token.head.text = 'handle'
    token.dep_ = 'dobj'
    direct object

2.4.2 The system should have a response time of at most 2.0 seconds excluding network based delay.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'time'
    token.dep_ = 'det'
    determiner


    TOKEN: response
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'time'
    token.dep_ = 'compound'
    compound


    TOKEN: time
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'time'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: at
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = '2'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: most
    =====
    token.tag_ = 'RBS'
    adverb, superlative
    token.head.text = '2'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: 2
    =====
    token.tag_ = 'CD'
    cardinal number
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

2.5.1 The system should provide a user-friendly interface. It should contain a basic site map and should not contain a confusing linking system.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provide'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'provide'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: provide
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'provide'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'interface'
    token.dep_ = 'det'
    determiner


    TOKEN: user
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'friendly'
    token.dep_ = 'npadvmod'
    noun phrase as adverbial modifier


    TOKEN: -
    =====
    token.tag_ = 'HYPH'
    punctuation mark, hyphen
    token.head.text = 'friendly'
    token.dep_ = 'punct'
    punctuation


    TOKEN: friendly
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'interface'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: interface
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provide'
    token.dep_ = 'dobj'
    direct object

2.5.2 The system should provide a direct feedback mechanism. Upon interaction, user shall be informed about success or failure of their action.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provide'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'provide'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: provide
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'provide'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'mechanism'
    token.dep_ = 'det'
    determiner


    TOKEN: direct
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'feedback'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: feedback
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'mechanism'
    token.dep_ = 'compound'
    compound


    TOKEN: mechanism
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'provide'
    token.dep_ = 'dobj'
    direct object

2.5.3 The system should have a well-chosen typeface that should be readable and clean.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'have'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: have
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'have'
    token.dep_ = 'ROOT'
    root


    TOKEN: a
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'typeface'
    token.dep_ = 'det'
    determiner


    TOKEN: well
    =====
    token.tag_ = 'RB'
    adverb
    token.head.text = 'chosen'
    token.dep_ = 'advmod'
    adverbial modifier


    TOKEN: -
    =====
    token.tag_ = 'HYPH'
    punctuation mark, hyphen
    token.head.text = 'chosen'
    token.dep_ = 'punct'
    punctuation


    TOKEN: chosen
    =====
    token.tag_ = 'VBN'
    verb, past participle
    token.head.text = 'typeface'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: typeface
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'have'
    token.dep_ = 'dobj'
    direct object


    TOKEN: that
    =====
    token.tag_ = 'WDT'
    wh-determiner
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'typeface'
    token.dep_ = 'relcl'
    relative clause modifier


    TOKEN: readable
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'readable'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: clean
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'readable'
    token.dep_ = 'conj'
    conjunct

2.6.1 The system should get backups and send them off-site at regular intervals for the possibility of disasters.


    TOKEN: The
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'system'
    token.dep_ = 'det'
    determiner


    TOKEN: system
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'get'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: should
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'get'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: get
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'get'
    token.dep_ = 'ROOT'
    root


    TOKEN: backups
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'get'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'get'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: send
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'get'
    token.dep_ = 'conj'
    conjunct


    TOKEN: them
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'send'
    token.dep_ = 'dobj'
    direct object


    TOKEN: off
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'site'
    token.dep_ = 'compound'
    compound


    TOKEN: -
    =====
    token.tag_ = 'HYPH'
    punctuation mark, hyphen
    token.head.text = 'site'
    token.dep_ = 'punct'
    punctuation


    TOKEN: site
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'send'
    token.dep_ = 'dobj'
    direct object


    TOKEN: at
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'send'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: regular
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'intervals'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: intervals
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'at'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: for
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'send'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'possibility'
    token.dep_ = 'det'
    determiner


    TOKEN: possibility
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'for'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'possibility'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: disasters
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

2.6.2 System shall be able to reinitialize itself and continue functioning in case of an unexpected shutdown.


    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'be'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'be'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: be
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'be'
    token.dep_ = 'ROOT'
    root


    TOKEN: able
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'be'
    token.dep_ = 'acomp'
    adjectival complement


    TOKEN: to
    =====
    token.tag_ = 'TO'
    infinitival "to"
    token.head.text = 'reinitialize'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: reinitialize
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'able'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: itself
    =====
    token.tag_ = 'PRP'
    pronoun, personal
    token.head.text = 'reinitialize'
    token.dep_ = 'dobj'
    direct object


    TOKEN: and
    =====
    token.tag_ = 'CC'
    conjunction, coordinating
    token.head.text = 'reinitialize'
    token.dep_ = 'cc'
    coordinating conjunction


    TOKEN: continue
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'reinitialize'
    token.dep_ = 'conj'
    conjunct


    TOKEN: functioning
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'continue'
    token.dep_ = 'xcomp'
    open clausal complement


    TOKEN: in
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'functioning'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: case
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'in'
    token.dep_ = 'pobj'
    object of preposition


    TOKEN: of
    =====
    token.tag_ = 'IN'
    conjunction, subordinating or preposition
    token.head.text = 'case'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: an
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'shutdown'
    token.dep_ = 'det'
    determiner


    TOKEN: unexpected
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'shutdown'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: shutdown
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'of'
    token.dep_ = 'pobj'
    object of preposition

2.6.3 System shall keep logs regarding the unexpected shutdown.

    TOKEN: System
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'keep'
    token.dep_ = 'nsubj'
    nominal subject


    TOKEN: shall
    =====
    token.tag_ = 'MD'
    verb, modal auxiliary
    token.head.text = 'keep'
    token.dep_ = 'aux'
    auxiliary


    TOKEN: keep
    =====
    token.tag_ = 'VB'
    verb, base form
    token.head.text = 'keep'
    token.dep_ = 'ROOT'
    root


    TOKEN: logs
    =====
    token.tag_ = 'NNS'
    noun, plural
    token.head.text = 'keep'
    token.dep_ = 'dobj'
    direct object


    TOKEN: regarding
    =====
    token.tag_ = 'VBG'
    verb, gerund or present participle
    token.head.text = 'keep'
    token.dep_ = 'prep'
    prepositional modifier


    TOKEN: the
    =====
    token.tag_ = 'DT'
    determiner
    token.head.text = 'shutdown'
    token.dep_ = 'det'
    determiner


    TOKEN: unexpected
    =====
    token.tag_ = 'JJ'
    adjective (English), other noun-modifier (Chinese)
    token.head.text = 'shutdown'
    token.dep_ = 'amod'
    adjectival modifier


    TOKEN: shutdown
    =====
    token.tag_ = 'NN'
    noun, singular or mass
    token.head.text = 'regarding'
    token.dep_ = 'pobj'
    object of preposition

