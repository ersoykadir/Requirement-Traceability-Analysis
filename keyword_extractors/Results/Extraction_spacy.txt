text: Users shall be able to register using a valid and unique email address, a username, and a password as defined in the security section.
Result:  {'security', 'password', 'username', 'register', 'defined', 'address', 'unique', 'valid', 'section', 'email'}


text: Users who are registered by providing their emails shall confirm their accounts via the link sent in the confirmation email.
Result:  {'providing', 'confirmation', 'registered', 'link', 'confirm', 'emails', 'accounts', 'email'}


text: Users shall be able to register using their Google account.
Result:  {'account', 'register', 'google'}


text: Users shall be able to log into their account using their email and password combination.
Result:  {'password', 'log', 'combination', 'account', 'email'}


text: Users shall be able to log into their account using their Google account (if they have previously completed 1.
Result:  {'account', 'log', 'google', 'completed'}


text: If a user enters their password wrong three times while logging in their password will be invalidated.
Result:  {'password', 'times', 'logging', 'enters', 'wrong', 'invalidated'}


text: Users shall be able to reset their password via email verification.
Result:  {'verification', 'password', 'email', 'reset'}


text: Users shall be able to log out of their account.
Result:  {'account', 'log'}


text: Users shall have their own profiles.
Result:  {'profiles'}


text: Users shall be able to use the features of their profile page.
Result:  {'profile', 'features', 'page'}


text: Users shall be able to block other users.
Result:  {'block'}


text: Blocked users shall not be able to view the blocking userâ€™s profile, join to their learning spaces, and comment on discussion posts they have created.
Result:  {'blocking', 'created', 'comment', 'spaces', 'join', 'blocked', 'userâ€', 'discussion', 'view', 'profile', '™', 'posts', 'learning'}


text: Users shall be able to follow other users.
Result:  {'follow'}


text: Users shall be able to use the discussion channel of the learning spaces they joined in.
Result:  {'joined', 'spaces', 'discussion', 'channel', 'learning'}


text: Users shall be able to open a discussion post to ask questions.
Result:  {'open', 'questions', 'post', 'discussion'}


text: Users shall be able to make a comment to an existing discussion post.
Result:  {'existing', 'comment', 'post', 'discussion'}


text: Users shall be able to use note taking features.
Result:  {'taking', 'note', 'features'}


text: Users shall be able to create notes.
Result:  {'create', 'notes'}


text: Users shall be able to save notes in their profile page.
Result:  {'page', 'profile', 'notes', 'save'}


text: Users shall be able to view their saved notes on their profile page.
Result:  {'saved', 'view', 'profile', 'notes', 'page'}


text: Users should be able to sort notes according to date.
Result:  {'date', 'notes', 'sort'}


text: Users should be able to filter notes by learning space name.
Result:  {'learning', 'space', 'notes', 'filter'}


text: Users shall be able to delete or edit their notes.
Result:  {'delete', 'edit', 'notes'}


text: Users shall be able to connect, annotate and tag notes.
Result:  {'tag', 'connect', 'notes', 'annotate'}


text: Users shall be able to share their notes with other users.
Result:  {'share', 'notes'}


text: Users shall be able to use the search engine (described in 2.
Result:  {'engine', 'search'}


text: Users shall be able to use the annotation features.
Result:  {'annotation', 'features'}


text: User shall select a portion of the text to annotate.
Result:  {'portion', 'select', 'text', 'annotate'}


text: User should be able to turn on and off annotation visibility.
Result:  {'turn', 'annotation', 'visibility'}


text: Users shall be able to join to any learning space they want to.
Result:  {'learning', 'join', 'space'}


text: Users shall be able to open a learning space in any subject and they don't need to provide any document regarding their experience on the topic.
Result:  {'topic', 'provide', 'space', 'subject', 'experience', 'open', 'document', 'learning'}


text: Lecturers shall be able to create polls, allowed to be filled by the students joined in their learning space.
Result:  {'joined', 'polls', 'space', 'allowed', 'create', 'lecturers', 'learning', 'filled', 'students'}


text: Users shall be able to create topics and resources for their learning space and any other learning space as well.
Result:  {'space', 'create', 'topics', 'learning', 'resources'}


text: Users shall be able to delete topics and resources under their learning space.
Result:  {'space', 'topics', 'learning', 'resources', 'delete'}


text: Users shall be able to delete topics and resources they created for any learning space.
Result:  {'created', 'space', 'topics', 'learning', 'resources', 'delete'}


text: Users shall be able to delete their accounts.
Result:  {'delete', 'accounts'}


text: Users shall be able to change their password.
Result:  {'password', 'change'}


text: Users shall be able to join the attendance list of the event that they would like to participate, for their joined classes, in the case that quota is not full.
Result:  {'joined', 'case', 'join', 'event', 'classes', 'attendance', 'participate', 'quota', 'list'}


text: Users shall be able to give feedback, consisting of a compulsory rating point between one to five and an optional text explaining their thoughts, to the classes they have joined in.
Result:  {'joined', 'text', 'feedback', 'optional', 'classes', 'rating', 'point', 'compulsory', 'explaining', 'consisting', 'thoughts'}


text: Users shall be able to comment on the learning space topics, to discuss about the resource.
Result:  {'space', 'comment', 'resource', 'discuss', 'topics', 'learning'}


text: Guest users shall be able to view available learning spaces on the site and their details like title, description and rating.
Result:  {'spaces', 'description', 'site', 'details', 'view', 'guest', 'rating', 'title', 'learning'}


text: Learners shall be able to organize and schedule events.
Result:  {'organize', 'schedule', 'learners', 'events'}


text: The scope of an event depends on the organizer's initiative.
Result:  {'initiative', 'scope', 'depends', 'event', 'organizer'}


text: The organizer shall have the right to edit details (date/time, title, description, location, quota) of the event.
Result:  {'description', 'date', 'location', 'organizer', 'event', 'details', 'title', 'quota', 'edit', 'time'}


text: The organizer shall have the right to cancel the event.
Result:  {'event', 'organizer', 'cancel'}


text: Admins shall be able to ban users for inappropriate behaviors.
Result:  {'inappropriate', 'ban', 'behaviors', 'admins'}


text: Admins shall be able to delete inappropriate comments and articles.
Result:  {'comments', 'inappropriate', 'delete', 'articles', 'admins'}


text: The system shall keep a profile page for every user registered that can also be edited by the user.
Result:  {'registered', 'edited', 'system', 'profile', 'page'}


text: The profile page shall have the following sections:
Result:  {'sections', 'profile', 'page'}


text: The system shall keep a bio section in the profile page written by the user.
Result:  {'system', 'written', 'profile', 'bio', 'section', 'page'}


text: The system shall keep an achievement section for each user.
Result:  {'system', 'achievement', 'section'}


text: The system shall keep a predefined list of badges that can be earned by a user.
Result:  {'badges', 'system', 'earned', 'predefined', 'list'}


text: Users will gain a badge when one the following occurs:
Result:  {'gain', 'occurs', 'badge'}


text: The system shall allow a lecturer to add more badges to the badge list of the learning space they created.
Result:  {'badges', 'created', 'space', 'add', 'system', 'badge', 'lecturer', 'learning', 'list'}


text: Achievement page shall be updated when a user gains a badge.
Result:  {'updated', 'gains', 'achievement', 'badge', 'page'}


text: The system shall keep an interests section in the profile page.
Result:  {'system', 'profile', 'interests', 'section', 'page'}


text: The system shall keep a predefined list for the possible interests a user may have.
Result:  {'system', 'interests', 'list', 'predefined'}


text: The system shall promote users to choose from this list to define their interests.
Result:  {'system', 'choose', 'promote', 'interests', 'define', 'list'}


text: Interests section shall be created based on the selections of a user from this list.
Result:  {'created', 'based', 'selections', 'list', 'interests', 'section'}


text: The system shall keep an activities section for each user.
Result:  {'activities', 'system', 'section'}


text: Activities page shall be visible to the users that follow the owner of the profile page.
Result:  {'follow', 'activities', 'visible', 'owner', 'profile', 'page'}


text: The system shall update the activities page when at least one of the following happens:
Result:  {'activities', 'update', 'system', 'page'}


text: The system shall update the activities page when at least one of the following happens:
Result:  {'activities', 'update', 'system', 'page'}


text: The system shall keep track of the learner process in a learning space showing the following features:
Result:  {'learner', 'process', 'space', 'features', 'system', 'track', 'learning', 'showing'}


text: The system shall keep a monitoring page section for every learning space that the learner takes.
Result:  {'learner', 'space', 'system', 'monitoring', 'learning', 'takes', 'section', 'page'}


text: If a learner drops a learning space, their monitoring record shall be deleted.
Result:  {'learner', 'space', 'drops', 'deleted', 'monitoring', 'learning', 'record'}


text: If a user is also a lecturer, the following statistics shall be kept by the system about each learning space that the user gives:
Result:  {'space', 'system', 'lecturer', 'learning', 'statistics'}


text: The system shall keep a knowledge section in the profile page.
Result:  {'system', 'knowledge', 'profile', 'section', 'page'}


text: The system shall keep a predefined list for the possible knowledge a user may have.
Result:  {'knowledge', 'system', 'list', 'predefined'}


text: The system shall promote users to choose from this list to define their knowledge.
Result:  {'system', 'choose', 'promote', 'knowledge', 'define', 'list'}


text: Knowledge page shall be created based on the selections of a user from this list.
Result:  {'created', 'based', 'selections', 'knowledge', 'list', 'page'}


text: The system shall keep a rating point between one to five for each user that is a lecturer.
Result:  {'lecturer', 'system', 'rating', 'point'}


text: System shall keep the total number of ratings that are given to all learning spaces of the lecturer by the users.
Result:  {'ratings', 'spaces', 'system', 'lecturer', 'number', 'total', 'learning'}


text: The system shall keep a notes section in the profile page.
Result:  {'system', 'profile', 'notes', 'section', 'page'}


text: System shall keep all the notes that user has taken during any coure that user has joined to.
Result:  {'joined', 'coure', 'system', 'notes'}


text: The system shall categorize notes according to learning spaces that they were taken in.
Result:  {'spaces', 'system', 'notes', 'learning', 'categorize'}


text: The system shall keep records of user profiles that are followed by the user.
Result:  {'profiles', 'system', 'records'}


text: The system shall allow a follower of a user to see the following features of a profile:
Result:  {'profile', 'system', 'follower', 'features'}


text: Users shall be able to change their privacy settings.
Result:  {'change', 'privacy', 'settings'}


text: The system shall provide an interface such that users can ask and answer questions.
Result:  {'provide', 'interface', 'system', 'questions', 'answer'}


text: The system shall provide a discussion section for any type of user inside a learning space.
Result:  {'provide', 'space', 'system', 'discussion', 'type', 'learning', 'section'}


text: The system should support replying, mentioning and threaded messages to create a comment.
Result:  {'support', 'comment', 'system', 'mentioning', 'create', 'messages', 'replying', 'threaded'}


text: The system should support sharing resources and files.
Result:  {'files', 'sharing', 'support', 'system', 'resources'}


text: The system shall provide a notes section in profile.
Result:  {'provide', 'system', 'profile', 'notes', 'section'}


text: The system shall support viewing notes of public and followed users on their profiles.
Result:  {'profiles', 'support', 'system', 'public', 'notes', 'viewing'}


text: The system shall provide registered learners the ability to connect, annotate and tag notes.
Result:  {'provide', 'connect', 'registered', 'annotate', 'ability', 'system', 'learners', 'notes', 'tag'}


text: The system shall provide a list of recommended learning spaces to learners.
Result:  {'provide', 'recommended', 'spaces', 'system', 'learners', 'learning', 'list'}


text: The learning spaces in the list shall either have semantically similar names to the learning spaces that the learner has completed previously or have tags that match with the learner's interests.
Result:  {'learner', 'spaces', 'match', 'completed', 'names', 'interests', 'similar', 'learning', 'tags', 'list'}


text: For any search, the result shall be broadscale in the sense that the results for any search should include those items that would be returned for another search with nearly synonymous keywords.
Result:  {'result', 'synonymous', 'include', 'broadscale', 'sense', 'search', 'keywords', 'items', 'results', 'returned'}


text: Learning spaces shall be searched by entering keywords.
Result:  {'spaces', 'entering', 'searched', 'keywords', 'learning'}


text: The search results for learning spaces should adapt to the user, i.
Result:  {'spaces', 'adapt', 'search', 'i.', 'learning', 'results'}


text: The learning spaces that are similar to the user's previous learning spaces should be ranked higher than other learning spaces.
Result:  {'higher', 'spaces', 'previous', 'ranked', 'similar', 'learning'}


text: The learning spaces that are about a topic in which the user has shown interest should be ranked higher than other learning spaces.
Result:  {'topic', 'higher', 'spaces', 'ranked', 'interest', 'shown', 'learning'}


text: The learning spaces that are similar to those that are taken by the users that the user follows should be ranked higher than other learning spaces.
Result:  {'higher', 'spaces', 'ranked', 'similar', 'learning'}


text: The title and the first post of discussions in the communication channel shall be searched by entering keywords.
Result:  {'discussions', 'communication', 'entering', 'post', 'searched', 'channel', 'title', 'keywords'}


text: The notes belonging to a user shall be searchable.
Result:  {'searchable', 'notes', 'belonging'}


text: It shall be possible to sort the results from newest to oldest or oldest to newest.
Result:  {'newest', 'oldest', 'sort', 'results'}


text: The system shall provide filtering of search results.
Result:  {'provide', 'filtering', 'system', 'search', 'results'}


text: The system shall provide filtering on the learning space results according to the availability of in-person meetings.
Result:  {'provide', 'space', 'filtering', 'system', 'availability', 'person', 'meetings', 'learning', 'results'}


text: The system shall provide filtering on the discussion channel search results according to topic.
Result:  {'topic', 'provide', 'filtering', 'system', 'discussion', 'channel', 'search', 'results'}


text: The system shall provide filtering on the results according to date.
Result:  {'provide', 'filtering', 'date', 'system', 'results'}


text: The system shall support annotating with text, images and URI.
Result:  {'support', 'text', 'annotating', 'uri', 'system', 'images'}


text: The system shall support external links in the case that users provide URI.
Result:  {'provide', 'case', 'support', 'links', 'uri', 'system', 'external'}


text: The system shall support links that relate to semantic resources about the resource.
Result:  {'semantic', 'relate', 'support', 'links', 'system', 'resource', 'resources'}


text: The system shall provide a mechanism such that annotation can be applied to any note or learning space resource.
Result:  {'provide', 'space', 'mechanism', 'system', 'note', 'resource', 'learning', 'annotation', 'applied'}


text: The system shall highlight annotated text portions to emphasize annotation.
Result:  {'annotated', 'text', 'system', 'portions', 'emphasize', 'annotation', 'highlight'}


text: The system shall provide in-app and push notifications.
Result:  {'provide', 'notifications', 'app', 'system', 'push'}


text: The system shall send notifications to the users if any of the following happens:
Result:  {'send', 'system', 'notifications'}


text: The platform shall be accessed via both a native Android application and a web application.
Result:  {'platform', 'web', 'accessed', 'native', 'application', 'android'}


text: The web application of the platform shall support modern browsers (Chrome, Firefox, Safari, Opera, Edge).
Result:  {'platform', 'support', 'web', 'browsers', 'chrome', 'firefox', 'application', 'opera', 'edge', 'modern', 'safari'}


text: The web application of the platform should be responsive.
Result:  {'platform', 'application', 'web', 'responsive'}


text: The platform language shall be English.
Result:  {'platform', 'language', 'english'}


text: The platform should support UTF-8 character encoding.
Result:  {'platform', 'support', 'encoding', 'character'}


text: Emails shall be valid and unique.
Result:  {'emails', 'unique', 'valid'}


text: Passwords should be at least 6 characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character.
Result:  {'lowercase', 'special', 'characters', 'passwords', 'letter', 'number', 'long', 'character', 'uppercase'}


text: The system shall encrypt passwords with the SHA-256 algorithm using a randomly generated salt.
Result:  {'system', 'algorithm', 'generated', 'passwords', 'encrypt', 'salt', 'sha-256'}


text: Users shall not be able to perform actions that are not in the scope of their roles.
Result:  {'roles', 'perform', 'scope', 'actions'}


text: Users shall not be able to access or modify the data of other users.
Result:  {'access', 'modify', 'data'}


text: API endpoints shall be protected with access tokens.
Result:  {'tokens', 'api', 'protected', 'access', 'endpoints'}


text: New access tokens shall be generated in exchange for either user credentials or an unexpired refresh token.
Result:  {'credentials', 'tokens', 'generated', 'access', 'token', 'unexpired', 'refresh', 'exchange'}


text: Some actions, such as account activation or password change, should be allowed only via email confirmation.
Result:  {'confirmation', 'password', 'actions', 'allowed', 'change', 'account', 'activation', 'email'}


text: The platform shall use the HTTPS Protocol.
Result:  {'platform', 'protocol', 'https'}


text: All input provided by a user should be validated in order to mitigate attacks like SQL injection.
Result:  {'attacks', 'sql', 'mitigate', 'injection', 'order', 'validated', 'input', 'provided'}


text: The platform shall comply with the rules specified by KVKK and GDPR.
Result:  {'kvkk', 'platform', 'gdpr', 'comply', 'rules'}


text: Users shall agree to the Terms of Service and Privacy Policy while registering.
Result:  {'service', 'policy', 'registering', 'terms', 'agree', 'privacy'}


text: Processing personal data outside the purpose of collection shall be prohibited.
Result:  {'collection', 'prohibited', 'processing', 'data', 'personal', 'purpose'}


text: A user's personal data shall be deleted as soon as it fulfills its purpose for collection.
Result:  {'collection', 'fulfills', 'deleted', 'data', 'personal', 'purpose'}


text: If personal data is to be used, the user shall be asked for their consent clearly.
Result:  {'data', 'consent', 'asked', 'personal'}


text: The system shall have two options for the visibility setting of a user profile:
Result:  {'system', 'visibility', 'options', 'profile', 'setting'}


text: Public Profile:
Result:  {'public', 'profile'}


text: Private Profile:
Result:  {'private', 'profile'}


text: The platform shall respond to any request in at most 5 seconds.
Result:  {'seconds', 'platform', 'request', 'respond'}


text: The platform shall support at least 100 simultaneous user actions.
Result:  {'simultaneous', 'platform', 'support', 'actions'}


text: The platform shall support at least 10000 user accounts.
Result:  {'platform', 'accounts', 'support'}


text: Database backup should be generated each week.
Result:  {'generated', 'backup', 'database', 'week'}


text: In case of failure, the platform should be back online in at most 2 hours.
Result:  {'failure', 'platform', 'case', 'hours'}


text: The platform should have an uptime of at least 99%.
Result:  {'platform', 'uptime'}


text: Annotations shall be compliant with the W3C Web Annotation Data Model and follow W3C standards.
Result:  {'web', 'follow', 'annotations', 'standards', 'model', 'data', 'w3c', 'compliant', 'annotation'}


text: Implementation of geolocation shall obey the guidelines of W3C GeoInfo.
Result:  {'obey', 'geolocation', 'guidelines', 'implementation', 'w3c', 'geoinfo'}


