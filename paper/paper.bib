@article{gotel-1994,
	author = {Gotel, Olly and Finkelstein, C.W.},
	journal = {International Conference on Requirements Engineering},
	month = {4},
	title = {{An analysis of the requirements traceability problem}},
	year = {1994}}

@article{cleland-huang-2007,
	author = {Cleland-Huang, Jane and Settimi, Raffaella and Romanova, Elena V. and Berenbach, Brian and Clark, Simon M.},
	journal = {IEEE Computer},
	month = {6},
	number = {6},
	pages = {27--35},
	publisher = {IEEE Computer Society},
	title = {{Best Practices for Automated Traceability}},
	volume = {40},
	year = {2007}
}
@article{mills-2017,
	author = {Mills, Chris},
	journal = {Foundations of Software Engineering},
	month = {8},
	title = {{Automating traceability link recovery through classification}},
	year = {2017}
}
@article{hayes-2003,
	author = {Hayes, Jane Huffman and Dekhtyar, Alex and Osborne, J. P.},
	journal = {IEEE International Conference on Requirements Engineering},
	month = {9},
	title = {{Improving requirements tracing via information retrieval}},
	year = {2003}
}

@article{bonner-2023,
	author = {Bonner, Maria and Zeller, Marc and Schulz, Gabor and Beyer, Dagmar and Olteanu, Mihaela},
	journal = {International Conference on Requirements Engineering: Foundation for Software Quality},
	month = {4},
	title = {{Automated Traceability between Requirements and Model-Based Design}},
	year = {2023}
}

@article{abdeen-2023,
	author = {Abdeen, Waleed},
	journal = {International Conference on Requirements Engineering: Foundation for Software Quality},
	month = {4},
	title = {{Taxonomic Trace Links Recommender: Context Aware Hierarchical Classification}},
	year = {2023},
}

@article{VANOOSTEN2023107226,
title = {On the effectiveness of automated tracing from model changes to project issues},
journal = {Information and Software Technology},
volume = {160},
pages = {107226},
year = {2023},
issn = {0950-5849},
author = {Wouter {van Oosten} and Randell Rasiman and Fabiano Dalpiaz and Toine Hurkmans},
keywords = {Requirement Traceability, Trace link recovery, Model-driven development, Low-code development, Machine learning},
abstract = {Context:
Requirements Traceability (RT) is concerned with monitoring and documenting the lifecycle of requirements. Although researchers have proposed several automated tracing tools, trace link establishment and maintenance are still prevalently manual activities.
Objective:
In order to foster the adoption of automated tracing tools, we study their empirical effectiveness in the context of model-driven development (MDD). We focus on trace link recovery (TLR) from (i) SVN revisions of MDD models to (ii) JIRA issues that represent requirements and bugs.
Method:
Based on the state-of-the-art in automated TLR, we propose the LCDTrace tool that uses 131 features to train a machine learning classifier. Some of these features use specific information for MDD contexts. We conduct three experiments on ten datasets from seven MDD projects. First, we evaluate the effectiveness of three ML algorithms and four rebalancing strategies using all 131 features, and we derive two optimal combinations for trace link recommendation and for trace maintenance. Second, we investigate whether the MDD-specific features convey higher performance than a version of LCDTrace that excludes those features. Third, we employ automated feature selection and study whether we can reduce the number of features while keeping similar performance, thereby boosting time and energy efficiency.
Results:
In our experiments, the gradient boosting models outperform those based on random forests. The best combinations for trace recommendation and maintenance achieve an F2-score of 61% and F0.5-score of 67%, respectively. While MDD-specific features do not provide additional value, automated feature selection succeeds at reducing feature numerosity without compromising performance.
Conclusion:
We provide insights on the effectiveness of state-of-the-art TLR techniques in MDD. Our findings are a baseline for devising and experimenting with alternative TLR approaches.}
}

@inproceedings{Marf2023TransFeatExAN,
  title={TransFeatEx: a NLP pipeline for feature extraction},
  author={Agust{\'i} G{\'a}llego Marf{\`a} and Quim Motger and Xavier Franch and Jordi Marco},
  booktitle={REFSQ Workshops},
  year={2023}
}

@INPROCEEDINGS{Spreading-Activation,
  author={Schlutter, Aaron and Vogelsang, Andreas},
  booktitle={2020 IEEE 28th International Requirements Engineering Conference (RE)}, 
  title={Trace Link Recovery using Semantic Relation Graphs and Spreading Activation}, 
  year={2020},
  volume={},
  number={},
  pages={20-31},
 }

@INPROCEEDINGS{Ontology,
  author={Li, Yonghua and Cleland-Huang, Jane},
  booktitle={2013 7th International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE)}, 
  title={Ontology-based trace retrieval}, 
  year={2013},
  volume={},
  number={},
  pages={30-36},
 }

@article{IR,
author = {Baeza-Yates, Ricardo and Ribeiro-neto, Berthier and Mills, Don and Bonn, Ontario and Juan, San and Mexico, Milan and Taipei, City and Wesley, Addison and Limited, Longman},
year = {1999},
month = {07},
pages = {},
title = {Modern Information Retrieval}
}

@INPROCEEDINGS{Taxonomy,
  author={Unterkalmsteiner, Michael},
  booktitle={2020 IEEE Seventh International Workshop on Artificial Intelligence for Requirements Engineering (AIRE)}, 
  title={TT-RecS: The Taxonomic Trace Recommender System}, 
  year={2020},
  volume={},
  number={},
  pages={18-21},
}

@article{capobianco-2013,
author = {Capobianco, Giovanni and De Lucia, Andrea and Oliveto, Rocco and Panichella Annibale and Panichella, Sebastiano},
year = {2013},
month = {07},
pages = {},
title = {Improving IR‐based traceability recovery via noun‐based indexing of software artifacts}}
